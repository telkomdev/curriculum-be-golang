definitions:
  models.AllItem:
    properties:
      count:
        example: 1
        type: integer
      data:
        items:
          $ref: '#/definitions/models.Item'
        type: array
    type: object
  models.CreateItemRequest:
    properties:
      name:
        example: Test Data
        type: string
      qty:
        example: 1
        type: integer
    type: object
  models.ErrorCreateItem:
    properties:
      error:
        example: true
        type: boolean
      message:
        example: name and qty cannot be empty
        type: string
    type: object
  models.ErrorMongoDBGet:
    properties:
      error:
        example: true
        type: boolean
      message:
        example: failed to get data from mongodb, {error}
        type: string
    type: object
  models.ErrorMongoDBUpset:
    properties:
      error:
        example: true
        type: boolean
      message:
        example: failed to insert or update data to mongodb, {error}
        type: string
    type: object
  models.Item:
    properties:
      _id:
        example: 6336185fc31ad7ad4022ab87
        type: string
      createdAt:
        example: "2022-09-30T05:12:47.469Z"
        type: string
      name:
        example: Test Data
        type: string
      qty:
        example: 1
        type: integer
      updatedAt:
        example: "2022-09-30T05:12:47.469Z"
        type: string
    type: object
  models.ResponseRoot:
    properties:
      error:
        example: false
        type: boolean
      message:
        example: Hello. Try GET/POST to /api/v1/item
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: GET item list from database and POST new item (save item data to mongo
    database)
  title: 40-mongodb
  version: "1.0"
paths:
  /:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseRoot'
      summary: Response this request with Hello Route.
      tags:
      - Root
  /api/v1/item:
    get:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AllItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMongoDBGet'
      summary: This endpoint will show all item data in JSON format, need too login
        and authorized as user or admin.
      tags:
      - Items
    post:
      consumes:
      - application/json
      parameters:
      - description: request data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateItemRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorCreateItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMongoDBUpset'
      summary: Request to create new item, need too login and authorized as user or
        admin.
      tags:
      - Items
swagger: "2.0"
